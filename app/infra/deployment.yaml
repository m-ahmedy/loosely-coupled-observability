apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: app
  annotations:
    linkerd.io/inject: enabled
    instrumentation.opentelemetry.io/inject: "true"
spec: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-go-app
  namespace: app
  labels:
    app: otel-go-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-go-app
  template:
    metadata:
      labels:
        app: otel-go-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: otel-go-app
          image: mahmoud1ahmedy/otel-go-app:latest
          env:
            - name: SERVICE_NAME
              value: otel-go-app
            - name: PORT
              value: "8080"
            - name: OTEL_GATEWAY_ENDPOINT
              value: "otel-gateway-opentelemetry-collector.otel-gateway.svc.cluster.local:4317"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: app
  name: app
  namespace: app
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: app
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app
            port:
              number: 8080
